FROM ubuntu:18.04



ARG CHECKOUT_HASH=master

ENV DIRPATH /root/
WORKDIR $DIRPATH

# Add sudo
RUN apt-get update && apt-get install apt-utils sudo -y



# RUN useradd --create-home --shell=/bin/bash user
# RUN chown -R user /home/user/
# RUN usermod -aG sudo user
# # Give the user a password
# RUN echo user:user | chpasswd

# RUN mkdir /home/user/app

# WORKDIR /home/user/app

RUN apt update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends software-properties-common nano wget libgflags-dev \
    && add-apt-repository ppa:ubuntu-toolchain-r/test



# Install GCC-9
RUN apt update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		build-essential \
		gcc-9 \
		g++-9 \
		gcc-9-multilib \
		g++-9-multilib \
		xutils-dev \
		patch \
		git \
		python3 \
		python3-pip \
		libpulse-dev \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 50 \
	&& update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 50


RUN add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
RUN apt-get update

# Getting latest version of cmake for glogging
RUN apt remove cmake
RUN apt install build-essential libssl-dev -y
RUN wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0.tar.gz
RUN tar -zxvf cmake-3.20.0.tar.gz && cd cmake-3.20.0 && ./bootstrap && \
    make && make install 



# Install OpenCV 3.4
RUN apt-get install -y git libgtk2.0-dev pkg-config libavcodec-dev \
    libavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev \
    libjpeg-dev libpng-dev libtiff-dev libjasper1 libjasper-dev libdc1394-22-dev unzip



RUN sudo apt upgrade -y
RUN sudo apt update -y

# get glogging module
RUN git clone https://github.com/google/glog.git \
    && cd glog \
    && mkdir build && cd build \
    && cmake -S .. -G "Unix Makefiles"

RUN cd glog && cmake --build build --target install


# get and build OpenCV 3.4
RUN wget https://github.com/opencv/opencv/archive/3.4.0.zip \
    && unzip 3.4.0.zip \
    && cd opencv-3.4.0 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j8 \
    && make install \
    && cd \
    && rm 3.4.0.zip

# install and build opencv_contrib
RUN wget https://github.com/opencv/opencv_contrib/archive/3.4.0.zip \
    && unzip 3.4.0.zip \
    && cd opencv-3.4.0/build \
    && cmake -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.4.0/modules/ .. \
    && make -j8 \
    && make install \
    && cd ../.. \
    && rm 3.4.0.zip


# Install Eigen3
RUN apt install libeigen3-dev

# install CSparse
RUN DEBIAN_FRONTEND=noninteractive apt install -y libsuitesparse-dev



RUN git clone https://github.com/halajun/VDO_SLAM.git &&\
    cd VDO_SLAM && git checkout $CHECKOUT_HASH &&\
    ./build.sh


     

# # Build the Library
# RUN chmod +x build.sh
# RUN ./build.sh

SHELL ["/bin/bash", "--login", "-c"]

# CMD ["/bin/bash"]
